

--  *************************
--  ELIMINACIÓN DE LAS TABLAS
--  *************************

DROP TABLE afp CASCADE CONSTRAINTS;

DROP TABLE asig_turno CASCADE CONSTRAINTS;

DROP TABLE cat_proceso CASCADE CONSTRAINTS;

DROP TABLE comuna CASCADE CONSTRAINTS;

DROP TABLE especialidad CASCADE CONSTRAINTS;

DROP TABLE j_turno CASCADE CONSTRAINTS;

DROP TABLE maquina CASCADE CONSTRAINTS;

DROP TABLE o_manten_maq CASCADE CONSTRAINTS;

DROP TABLE operario CASCADE CONSTRAINTS;

DROP TABLE personal CASCADE CONSTRAINTS;

DROP TABLE planta CASCADE CONSTRAINTS;

DROP TABLE region CASCADE CONSTRAINTS;

DROP TABLE salud CASCADE CONSTRAINTS;

DROP TABLE t_maquina CASCADE CONSTRAINTS;

DROP TABLE tec_mantencion CASCADE CONSTRAINTS;

DROP TABLE turno CASCADE CONSTRAINTS;


--  *************************
--  CREACIÓN DE LAS TABLAS Y PK
--  *************************

CREATE TABLE region (
    id_region NUMBER(10) NOT NULL,
    nombre    VARCHAR2(100) NOT NULL
);

ALTER TABLE region ADD CONSTRAINT region_pk PRIMARY KEY ( id_region );

CREATE TABLE salud (
    id_salud NUMBER(10) NOT NULL,
    nombre   VARCHAR2(100) NOT NULL
);

ALTER TABLE salud ADD CONSTRAINT salud_pk PRIMARY KEY ( id_salud );

CREATE TABLE afp (
    id_afp     NUMBER(10) NOT NULL,
    nombre_afp VARCHAR2(100) NOT NULL
);

ALTER TABLE afp ADD CONSTRAINT afp_pk PRIMARY KEY ( id_afp );

CREATE TABLE t_maquina (
    id_tipo NUMBER(10) NOT NULL,
    nombre  VARCHAR2(100) NOT NULL
);

ALTER TABLE t_maquina ADD CONSTRAINT t_maquina_pk PRIMARY KEY ( id_tipo );

CREATE TABLE cat_proceso (
    id_categoria NUMBER(10) NOT NULL,
    nombre       VARCHAR2(100) NOT NULL
);

ALTER TABLE cat_proceso ADD CONSTRAINT cat_proceso_pk PRIMARY KEY ( id_categoria );

CREATE TABLE especialidad (
    id_espec NUMBER(10) NOT NULL,
    nombre   VARCHAR2(100) NOT NULL
);

ALTER TABLE especialidad ADD CONSTRAINT especialidad_pk PRIMARY KEY ( id_espec );

CREATE TABLE turno (
    id_turno     VARCHAR2(10) NOT NULL,
    nombre       VARCHAR2(100) NOT NULL,
    hora_inicio  CHAR(5) NOT NULL,
    hora_termino CHAR(5) NOT NULL
);

ALTER TABLE turno ADD CONSTRAINT turno_pk PRIMARY KEY ( id_turno );

CREATE TABLE comuna (
    id_comuna        NUMBER(10) GENERATED BY DEFAULT AS IDENTITY(START WITH 1050 INCREMENT BY 5)  NOT NULL,
    nombre           VARCHAR2(100) NOT NULL,
    region_id_region NUMBER(10) NOT NULL
);

ALTER TABLE comuna ADD CONSTRAINT comuna_pk PRIMARY KEY ( id_comuna );

CREATE TABLE planta (
    id_planta        NUMBER(10) NOT NULL,
    nombre           VARCHAR2(100) NOT NULL,
    direccion        VARCHAR2(100) NOT NULL,
    comuna_id_comuna NUMBER(10) NOT NULL
);

ALTER TABLE planta ADD CONSTRAINT planta_pk PRIMARY KEY ( id_planta );

CREATE TABLE personal (
    id_personal          NUMBER(10) NOT NULL,
    rut                  NUMBER(10) NOT NULL,
    dv                   CHAR(1) NOT NULL,
    nombres              VARCHAR2(100) NOT NULL,
    apellido_paterno     VARCHAR2(100) NOT NULL,
    apellido_materno     VARCHAR2(100) NOT NULL,
    fecha_contratacion   DATE NOT NULL,
    sueldo_base          NUMBER(10) NOT NULL,
    estado_activo        CHAR(1) DEFAULT 's' NOT NULL,
    planta_id_planta     NUMBER(10) NOT NULL,
    afp_id_afp           NUMBER(10) NOT NULL,
    salud_id_salud       NUMBER(10) NOT NULL,
    tipo                 VARCHAR2(100) NOT NULL,
    personal_id_personal NUMBER(10),
    turno_id_turno       VARCHAR2(10) NOT NULL
);

ALTER TABLE personal
    ADD CONSTRAINT arc_2_lov CHECK ( tipo IN ( '3', '2', '1' ) );

CREATE INDEX personal__idx ON
    personal (
        personal_id_personal
    ASC );

ALTER TABLE personal ADD CONSTRAINT personal_pk PRIMARY KEY ( id_personal );

CREATE TABLE maquina (
    id_maquina        NUMBER(10) NOT NULL,
    nombre            VARCHAR2(100) NOT NULL,
    estado_activo     CHAR(1) NOT NULL,
    planta_id_planta  NUMBER(10) NOT NULL,
    t_maquina_id_tipo NUMBER(10) NOT NULL
);

ALTER TABLE maquina ADD CONSTRAINT maquina_pk PRIMARY KEY ( id_maquina,
                                                            planta_id_planta );
                                                            
CREATE TABLE operario (
    personal_id_personal     NUMBER(10) NOT NULL,
    certificacion            VARCHAR2(100),
    hora_por_turno           NUMBER(10) DEFAULT 8 NOT NULL,
    cat_proceso_id_categoria NUMBER(10) NOT NULL
);

CREATE TABLE tec_mantencion (
    personal_id_personal  NUMBER(10) NOT NULL,
    nivel_certificacion   VARCHAR2(100),
    tiempo_respuesta      NUMBER(10) NOT NULL,
    especialidad_id_espec NUMBER(10) NOT NULL
);

CREATE TABLE j_turno (
    personal_id_personal NUMBER(10) NOT NULL,
    area_responsabilidad VARCHAR2(100) NOT NULL,
    maximo_operario      NUMBER(10) NOT NULL
);

CREATE TABLE o_manten_maq (
    id_orden                 NUMBER(10) NOT NULL,
    fecha_programada         DATE NOT NULL,
    fecha_ejecucion          DATE,
    descripcion              VARCHAR2(100) NOT NULL,
    maquina_id_maquina       NUMBER(10) NOT NULL,
    maquina_planta_id_planta NUMBER(10) NOT NULL,
    personal_id_personal     NUMBER(10) NOT NULL
);

ALTER TABLE o_manten_maq ADD CONSTRAINT o_manten_maq_pk PRIMARY KEY ( id_orden );

CREATE TABLE asig_turno (
    id_asigna                NUMBER(10) NOT NULL,
    fecha_asig               DATE NOT NULL,
    rol                      VARCHAR2(100),
    maquina_id_maquina       NUMBER(10) NOT NULL,
    maquina_planta_id_planta NUMBER(10) NOT NULL,
    turno_id_turno           VARCHAR2(10) NOT NULL,
    personal_id_personal     NUMBER(10) NOT NULL
);

ALTER TABLE asig_turno ADD CONSTRAINT asig_turno_pk PRIMARY KEY ( id_asigna );

--  *************************
--  CREACIÓN FK
--  *************************

ALTER TABLE asig_turno
    ADD CONSTRAINT asig_turno_maquina_fk FOREIGN KEY ( maquina_id_maquina,
                                                       maquina_planta_id_planta )
        REFERENCES maquina ( id_maquina,
                             planta_id_planta );

ALTER TABLE asig_turno
    ADD CONSTRAINT asig_turno_personal_fk FOREIGN KEY ( personal_id_personal )
        REFERENCES personal ( id_personal );

ALTER TABLE asig_turno
    ADD CONSTRAINT asig_turno_turno_fk FOREIGN KEY ( turno_id_turno )
        REFERENCES turno ( id_turno );

ALTER TABLE comuna
    ADD CONSTRAINT comuna_region_fk FOREIGN KEY ( region_id_region )
        REFERENCES region ( id_region );

ALTER TABLE j_turno
    ADD CONSTRAINT j_turno_personal_fk FOREIGN KEY ( personal_id_personal )
        REFERENCES personal ( id_personal );

ALTER TABLE maquina
    ADD CONSTRAINT maquina_planta_fk FOREIGN KEY ( planta_id_planta )
        REFERENCES planta ( id_planta );

ALTER TABLE maquina
    ADD CONSTRAINT maquina_t_maquina_fk FOREIGN KEY ( t_maquina_id_tipo )
        REFERENCES t_maquina ( id_tipo );

ALTER TABLE o_manten_maq
    ADD CONSTRAINT o_manten_maq_maquina_fk FOREIGN KEY ( maquina_id_maquina,
                                                         maquina_planta_id_planta )
        REFERENCES maquina ( id_maquina,
                             planta_id_planta );

ALTER TABLE o_manten_maq
    ADD CONSTRAINT o_manten_maq_personal_fk FOREIGN KEY ( personal_id_personal )
        REFERENCES personal ( id_personal );

ALTER TABLE operario
    ADD CONSTRAINT operario_cat_proceso_fk FOREIGN KEY ( cat_proceso_id_categoria )
        REFERENCES cat_proceso ( id_categoria );

ALTER TABLE operario
    ADD CONSTRAINT operario_personal_fk FOREIGN KEY ( personal_id_personal )
        REFERENCES personal ( id_personal );

ALTER TABLE personal
    ADD CONSTRAINT personal_afp_fk FOREIGN KEY ( afp_id_afp )
        REFERENCES afp ( id_afp );

ALTER TABLE personal
    ADD CONSTRAINT personal_personal_fk FOREIGN KEY ( personal_id_personal )
        REFERENCES personal ( id_personal );

ALTER TABLE personal
    ADD CONSTRAINT personal_planta_fk FOREIGN KEY ( planta_id_planta )
        REFERENCES planta ( id_planta );

ALTER TABLE personal
    ADD CONSTRAINT personal_salud_fk FOREIGN KEY ( salud_id_salud )
        REFERENCES salud ( id_salud );

ALTER TABLE personal
    ADD CONSTRAINT personal_turno_fk FOREIGN KEY ( turno_id_turno )
        REFERENCES turno ( id_turno );

ALTER TABLE planta
    ADD CONSTRAINT planta_comuna_fk FOREIGN KEY ( comuna_id_comuna )
        REFERENCES comuna ( id_comuna );

ALTER TABLE tec_mantencion
    ADD CONSTRAINT tec_mantencion_especialidad_fk FOREIGN KEY ( especialidad_id_espec )
        REFERENCES especialidad ( id_espec );

ALTER TABLE tec_mantencion
    ADD CONSTRAINT tec_mantencion_personal_fk FOREIGN KEY ( personal_id_personal )
        REFERENCES personal ( id_personal );

CREATE OR REPLACE TRIGGER arc_arc_2_tec_mantencion BEFORE
    INSERT OR UPDATE OF personal_id_personal ON tec_mantencion
    FOR EACH ROW
DECLARE
    d VARCHAR2(100);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        personal a
    WHERE
        a.id_personal = :new.personal_id_personal;

    IF ( d IS NULL OR d <> '3' ) THEN
        raise_application_error(-20223, 'FK TEC_MANTENCION_PERSONAL_FK in Table TEC_MANTENCION violates Arc constraint on Table PERSONAL - discriminator column tipo doesn''t have value ''3'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_2_operario BEFORE
    INSERT OR UPDATE OF personal_id_personal ON operario
    FOR EACH ROW
DECLARE
    d VARCHAR2(100);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        personal a
    WHERE
        a.id_personal = :new.personal_id_personal;

    IF ( d IS NULL OR d <> '2' ) THEN
        raise_application_error(-20223, 'FK OPERARIO_PERSONAL_FK in Table OPERARIO violates Arc constraint on Table PERSONAL - discriminator column tipo doesn''t have value ''2'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_2_j_turno BEFORE
    INSERT OR UPDATE OF personal_id_personal ON j_turno
    FOR EACH ROW
DECLARE
    d VARCHAR2(100);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        personal a
    WHERE
        a.id_personal = :new.personal_id_personal;

    IF ( d IS NULL OR d <> '1' ) THEN
        raise_application_error(-20223, 'FK J_TURNO_PERSONAL_FK in Table J_TURNO violates Arc constraint on Table PERSONAL - discriminator column tipo doesn''t have value ''1'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

--  *************************
--  MODIFICACIONES AL MODELO
--  *************************

DELETE FROM turno WHERE id_turno IN ('M0715','N2307','T1523');
COMMIT;


ALTER TABLE turno
  ADD CONSTRAINT ck_turno_hora_inicio
  CHECK (
    LENGTH(hora_inicio)=5
    AND SUBSTR(hora_inicio,3,1)=':'
    AND SUBSTR(hora_inicio,1,2) BETWEEN '00' AND '23'
    AND SUBSTR(hora_inicio,4,2) BETWEEN '00' AND '59'
  );

ALTER TABLE turno
  ADD CONSTRAINT ck_turno_hora_termino
  CHECK (
    LENGTH(hora_termino)=5
    AND SUBSTR(hora_termino,3,1)=':'
    AND SUBSTR(hora_termino,1,2) BETWEEN '00' AND '23'
    AND SUBSTR(hora_termino,4,2) BETWEEN '00' AND '59'
  );

    
ALTER TABLE asig_turno
  ADD fecha_asig_dia GENERATED ALWAYS AS (TRUNC(fecha_asig)) VIRTUAL;

ALTER TABLE asig_turno
  ADD CONSTRAINT uq_asig_turno_persona_dia
  UNIQUE (personal_id_personal, fecha_asig_dia);
  
ALTER TABLE o_manten_maq
  ADD CONSTRAINT ck_o_manten_maq_fecha_ej 
  CHECK (fecha_ejecucion IS NULL OR fecha_ejecucion>=fecha_programada);
  

CREATE UNIQUE INDEX uk_region_nombre ON region (UPPER(TRIM(nombre)));
    
CREATE UNIQUE INDEX uk_salud_nombre ON salud (UPPER(TRIM(nombre)));
  
CREATE UNIQUE INDEX uk_afp_nombre_afp ON AFP(UPPER(TRIM(nombre_afp)));
  
CREATE UNIQUE INDEX uk_t_maquina_nombre ON t_maquina (UPPER(TRIM(nombre)));
  
CREATE UNIQUE INDEX uk_turno_nombre ON turno (UPPER(TRIM(nombre)));
  

--  *************************
--  POBLAMIENTO DEL MODELO
--  *************************

DROP SEQUENCE SE_REGION_ID_REGION;

CREATE SEQUENCE SE_REGION_ID_REGION
START WITH 21
INCREMENT BY 1
NOCYCLE
CACHE 20;


INSERT INTO REGION (id_region,nombre) VALUES(SE_REGION_ID_REGION.NEXTVAL,'Region de valparaiso'); 
INSERT INTO REGION (id_region,nombre) VALUES(SE_REGION_ID_REGION.NEXTVAL,'Region Metropolitana'); 

INSERT INTO COMUNA (nombre,region_id_region) VALUES('Quilpue',21); 
INSERT INTO COMUNA (nombre,region_id_region) VALUES('Maipu',22); 

INSERT INTO PLANTA (id_planta,nombre,direccion,comuna_id_comuna) VALUES(45,'Planta Oriente','Camino Industrial 1234',1050); 
INSERT INTO PLANTA (id_planta,nombre,direccion,comuna_id_comuna) VALUES(46,'Planta Costa','Av. Vidrieras 890',1055);

INSERT INTO TURNO (id_turno,nombre,hora_inicio,hora_termino) VALUES('M0715','Mañana','07:00','15:00');
INSERT INTO TURNO (id_turno,nombre,hora_inicio,hora_termino) VALUES('N2307','Noche','23:00','07:00');
INSERT INTO TURNO (id_turno,nombre,hora_inicio,hora_termino) VALUES('T1523','Tarde','15:00','23:00');

--  *************************
--  INFORME Nº1
--  *************************

SELECT id_turno||' - '||nombre AS TURNO,hora_inicio AS ENTRADA,hora_termino AS SALIDA
FROM TURNO
WHERE hora_inicio>'20:00'
ORDER BY hora_inicio DESC;

--  *************************
--  INFORME Nº2
--  *************************
SELECT nombre||' ('||id_turno||') ' AS TURNO,hora_inicio AS ENTRADA,hora_termino AS SALIDA
FROM TURNO
WHERE hora_inicio BETWEEN '05:59' AND '14:58'
ORDER BY hora_inicio ASC;


